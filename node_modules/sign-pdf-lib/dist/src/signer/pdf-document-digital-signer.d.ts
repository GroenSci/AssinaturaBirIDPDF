/// <reference types="node" />
import { PdfByteRanges, Rectangle, SignatureText } from '../models';
import { SignatureParameters } from '../models/parameters';
import { PDFRef } from 'pdf-lib';
export interface AddSignatureFieldParameters {
    name?: string;
    pageIndex: number;
    rectangle?: Rectangle;
    visualRef?: PDFRef;
    placeholderRef?: PDFRef;
    embedFont: boolean;
}
export interface AddVisualParameters {
    background?: Buffer;
    texts?: SignatureText[];
}
export interface AddSignaturePlaceholderParameters extends SignatureParameters {
    signaturePlaceholder: string;
    rangePlaceHolder: number;
}
export interface UpdateSignatureParameters {
    placeholderRef: PDFRef;
    visualRef?: PDFRef;
    embedFont: boolean;
}
export declare class PdfDocumentDigitalSigner {
    #private;
    static fromPdfAsync(pdf: Buffer): Promise<PdfDocumentDigitalSigner>;
    private constructor();
    addSignatureField({ name, pageIndex, rectangle, visualRef, placeholderRef, embedFont }: AddSignatureFieldParameters): void;
    addVisualAsync({ background, texts }: AddVisualParameters): Promise<PDFRef | undefined>;
    addEmptyVisual(): PDFRef;
    addSignaturePlaceholder({ name, reason, location, contactInfo, date, signaturePlaceholder, rangePlaceHolder }: AddSignaturePlaceholderParameters): PDFRef;
    updateSignature(name: string, { placeholderRef, visualRef, embedFont }: UpdateSignatureParameters): void;
    saveAsync(): Promise<Buffer>;
    getPlaceholderRanges(): PdfByteRanges;
}
