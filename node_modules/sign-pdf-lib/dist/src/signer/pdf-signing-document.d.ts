/// <reference types="node" />
import { PdfByteRanges, Size } from '../models';
import { PDFDict, PDFObject, PDFRef } from 'pdf-lib';
export declare class PdfSigningDocument {
    #private;
    static fromPdfAsync(pdf: Buffer): Promise<PdfSigningDocument>;
    private constructor();
    registerDict(dict: any): PDFRef;
    getPageSize(pageIndex: number): Size;
    getPageRef(pageIndex: number): PDFRef;
    getDict(ref: PDFRef): PDFDict;
    addDict(dict: any): PDFDict;
    addPageAnnot(pageIndex: number, annotRef: PDFRef): void;
    addFormField(fieldRef: PDFRef): void;
    addPageContent(visualRef: PDFRef, pageIndex: number): void;
    addPageResource(resourceRef: PDFRef, pageIndex: number, name: string): void;
    registerStream(drawBuffer: string, visualObj: any): PDFRef;
    markObjAsChanged(obj: PDFObject): void;
    saveAsync(): Promise<Buffer>;
    getPlaceholderRanges(): PdfByteRanges;
    ensureAcroForm(): void;
    ensurePageAnnots(pageIndex: number): void;
    ensurePageContentsArray(pageIndex: number): void;
    ensurePageResourcesXObject(pageIndex: number): void;
    embedImageAsync(image: Buffer): Promise<PDFRef>;
    getSignatures(): PDFDict[];
    getSignature(name: string): PDFDict;
    getSignaturePageNumber(name: string): number;
    getSignatureBuffer(signature: PDFDict): Buffer;
    getSignatureHexString(signature: PDFDict): string;
    isSignatureForEntireDocument(signature: PDFDict): boolean;
    getSignatureCount(): number;
    getFields(): PDFDict[];
    embedSignatureFont(pageHint: number | PDFRef): void;
}
