"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const pdf_digital_signer_1 = require("./pdf-digital-signer");
const assets_pdf_digital_signer_pdf_1 = require("../../test/_run-assets/signer/assets-pdf-digital-signer-pdf");
const assets_pdf_digital_signer_regression_1 = require("../../test/_run-assets/signer/assets-pdf-digital-signer-regression");
const _assets_common_1 = require("../../test/_run-assets/_assets-common");
const _helpers_1 = require("../../test/_helpers");
const chai_1 = require("chai");
const chai_2 = require("chai");
const chaiAsPromised = require("chai-as-promised");
(0, chai_1.use)(chaiAsPromised);
it("_generate", function () {
    return __awaiter(this, void 0, void 0, function* () {
        const pdf = yield (0, _helpers_1.generatePdf17Async)({ pageCount: 2 });
        yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.pdf, pdf);
        const reverseYPdf = yield (0, _helpers_1.generatePdf13Async)({ pageCount: 2 });
        yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.reverseYPdf, reverseYPdf);
    });
});
describe("PdfDigitalSigner", function () {
    let pdfSigner;
    let info;
    let fieldInfo;
    let addFieldInfo;
    let settings;
    beforeEach(function () {
        info = {
            pageNumber: 1,
            name: "Signature",
            signature: {
                name: "Test Signer",
                location: "Timisoara",
                reason: "Signing",
                date: new Date(2023, 1, 20, 18, 47, 35),
                contactInfo: "signer@semnezonline.ro",
            },
            visual: {
                rectangle: { left: 50, top: 100, right: 50 + 214, bottom: 100 + 70 },
                background: assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signatureImage,
                texts: [
                    {
                        lines: ["JOHN", "DOE"],
                    },
                    {
                        lines: [
                            "Digitally signed by",
                            "JOHN DOE",
                            "Date: 2023.11.03",
                            "20:28:46 +02'00'",
                        ],
                    },
                ],
            },
        };
        fieldInfo = {
            fieldName: "Signature",
            signature: {
                name: "Test Signer",
                location: "Timisoara",
                reason: "Signing",
                date: new Date(2023, 1, 20, 18, 47, 35),
                contactInfo: "signer@semnezonline.ro",
            },
            visual: {
                background: assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signatureImage,
                texts: [
                    {
                        lines: ["JOHN", "DOE"],
                    },
                    {
                        lines: [
                            "Digitally signed by",
                            "JOHN DOE",
                            "Date: 2023.11.03",
                            "20:28:46 +02'00'",
                        ],
                    },
                ],
            },
        };
        addFieldInfo = {
            pageNumber: 1,
            name: "Signature",
            rectangle: { left: 50, top: 100, right: 50 + 214, bottom: 100 + 70 },
        };
        settings = {
            signatureLength: 4000 - 6,
            rangePlaceHolder: 9999999,
            signatureComputer: {
                certificate: _assets_common_1.commonAssets.p12Certificate,
                password: "password",
            },
        };
        pdfSigner = new pdf_digital_signer_1.PdfDigitalSigner(settings);
    });
    describe("addPlaceholderAsync", function () {
        it("adds placeholder", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const placeholderPdf = yield pdfSigner.addPlaceholderAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.placeholderPdf, placeholderPdf);
                (0, chai_2.expect)(placeholderPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.placeholderPdf);
            });
        });
        it("adds placeholder (no name)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.name;
                const noNamePlaceholderPdf = yield pdfSigner.addPlaceholderAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noNamePlaceholderPdf, noNamePlaceholderPdf);
                (0, chai_2.expect)(noNamePlaceholderPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noNamePlaceholderPdf);
            });
        });
        it("adds placeholder (no signature)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.signature;
                const noSignaturePlaceholderPdf = yield pdfSigner.addPlaceholderAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noSignaturePlaceholderPdf, noSignaturePlaceholderPdf);
                (0, chai_2.expect)(noSignaturePlaceholderPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noSignaturePlaceholderPdf);
            });
        });
        it("adds placeholder (no visual)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.visual;
                const noVisualPlaceholderPdf = yield pdfSigner.addPlaceholderAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noVisualPlaceholderPdf, noVisualPlaceholderPdf);
                (0, chai_2.expect)(noVisualPlaceholderPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noVisualPlaceholderPdf);
            });
        });
        it("adds placeholder (no optionals)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.name;
                delete info.signature;
                delete info.visual;
                const noOptionalsPlaceholderPdf = yield pdfSigner.addPlaceholderAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noOptionalsPlaceholderPdf, noOptionalsPlaceholderPdf);
                (0, chai_2.expect)(noOptionalsPlaceholderPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noOptionalsPlaceholderPdf);
            });
        });
    });
    describe("addFieldAsync", function () {
        it("adds field", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const fieldPdf = yield pdfSigner.addFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, addFieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.fieldPdf, fieldPdf);
                (0, chai_2.expect)(fieldPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf);
            });
        });
        it("adds field (no name)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete addFieldInfo.name;
                const noNameFieldPdf = yield pdfSigner.addFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, addFieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noNameFieldPdf, noNameFieldPdf);
                (0, chai_2.expect)(noNameFieldPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noNameFieldPdf);
            });
        });
        it("adds field (no optionals)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete addFieldInfo.name;
                const noOptionalsFieldPdf = yield pdfSigner.addFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, addFieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noOptionalsFieldPdf, noOptionalsFieldPdf);
                (0, chai_2.expect)(noOptionalsFieldPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noOptionalsFieldPdf);
            });
        });
    });
    describe("signAsync", function () {
        it("signs document", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const signedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.signedPdf, signedPdf);
                (0, chai_2.expect)(signedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signedPdf);
            });
        });
        it("signs document (chinese characters)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                info.signature.name = "小白";
                info.signature.location = "哈哈哈";
                info.signature.reason = "我同意";
                const signedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.chineseSignedPdf, signedPdf);
                (0, chai_2.expect)(signedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.chineseSignedPdf);
            });
        });
        it("signs document (no name)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.name;
                const noNameSignedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noNameSignedPdf, noNameSignedPdf);
                (0, chai_2.expect)(noNameSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noNameSignedPdf);
            });
        });
        it("signs document (no signature)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.signature;
                const noSignatureSignedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noSignatureSignedPdf, noSignatureSignedPdf);
                (0, chai_2.expect)(noSignatureSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noSignatureSignedPdf);
            });
        });
        it("signs document (no visual)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.visual;
                const noVisualSignedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noVisualSignedPdf, noVisualSignedPdf);
                (0, chai_2.expect)(noVisualSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noVisualSignedPdf);
            });
        });
        it("signs document (no optionals)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete info.name;
                delete info.signature;
                delete info.visual;
                const noOptionalsSignedPdf = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.pdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noOptionalsSignedPdf, noOptionalsSignedPdf);
                (0, chai_2.expect)(noOptionalsSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noOptionalsSignedPdf);
            });
        });
        it("signs already signed document", function () {
            return __awaiter(this, void 0, void 0, function* () {
                info.name = "Signature2";
                const res = yield pdfSigner.signAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signedPdf, info);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.twiceSignedPdf, res);
                (0, chai_2.expect)(res).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.twiceSignedPdf);
            });
        });
    });
    describe("signFieldAsync", function () {
        it("signs document", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const fieldSignedPdf = yield pdfSigner.signFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, fieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.fieldSignedPdf, fieldSignedPdf);
                (0, chai_2.expect)(fieldSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldSignedPdf);
            });
        });
        it("signs document (no signature)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete fieldInfo.signature;
                const noSignatureFieldSignedPdf = yield pdfSigner.signFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, fieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noSignatureFieldSignedPdf, noSignatureFieldSignedPdf);
                (0, chai_2.expect)(noSignatureFieldSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noSignatureFieldSignedPdf);
            });
        });
        it("signs document (no visual)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete fieldInfo.visual;
                const noVisualFieldSignedPdf = yield pdfSigner.signFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, fieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noVisualFieldSignedPdf, noVisualFieldSignedPdf);
                (0, chai_2.expect)(noVisualFieldSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noVisualFieldSignedPdf);
            });
        });
        it("signs document (no optionals)", function () {
            return __awaiter(this, void 0, void 0, function* () {
                delete fieldInfo.signature;
                delete fieldInfo.visual;
                const noOptionalsFieldSignedPdf = yield pdfSigner.signFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, fieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.noOptionalsFieldSignedPdf, noOptionalsFieldSignedPdf);
                (0, chai_2.expect)(noOptionalsFieldSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.noOptionalsFieldSignedPdf);
            });
        });
        it("signs specified field", function () {
            return __awaiter(this, void 0, void 0, function* () {
                addFieldInfo.rectangle.left += 250;
                addFieldInfo.rectangle.right += 250;
                addFieldInfo.name = "Signature2";
                const twoFieldsPdf = yield pdfSigner.addFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, addFieldInfo);
                fieldInfo.fieldName = "Signature2";
                const specifiedFieldSignedPdf = yield pdfSigner.signFieldAsync(twoFieldsPdf, fieldInfo);
                yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.specifiedFieldSignedPdf, specifiedFieldSignedPdf);
                (0, chai_2.expect)(specifiedFieldSignedPdf).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.specifiedFieldSignedPdf);
            });
        });
        it("throws when field not found", function () {
            return __awaiter(this, void 0, void 0, function* () {
                fieldInfo.fieldName = "Another name";
                yield (0, chai_2.expect)(pdfSigner.signFieldAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf, fieldInfo)).to.be.rejected;
            });
        });
    });
    describe("verifySignaturesAsync", function () {
        it("validates signatures", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const res = yield pdfSigner.verifySignaturesAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signedPdf);
                yield _helpers_1.generateAsset.generateJsonAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.paths.checkSignedPdf, res);
                (0, chai_2.expect)(res).to.be.deep.equal(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.checkSignedPdf);
            });
        });
    });
    describe("getFieldsAsync", function () {
        it("returns fields", function () {
            return __awaiter(this, void 0, void 0, function* () {
                const res = yield pdfSigner.getFieldsAsync(assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.fieldPdf);
                (0, chai_2.expect)(res).to.be.deep.equal([{ name: "Signature", pageNumber: 1 }]);
            });
        });
    });
});
describe("PdfDigitalSigner Regression", function () {
    let pdfSigner;
    let fieldInfo;
    let settings;
    beforeEach(function () {
        fieldInfo = {
            fieldName: "Signature1",
            signature: {
                name: "Test Signer",
                location: "Timisoara",
                reason: "Signing",
                date: new Date(2023, 1, 20, 18, 47, 35),
                contactInfo: "signer@semnezonline.ro",
            },
            visual: {
                background: assets_pdf_digital_signer_pdf_1.pdfDigitalSignerAssets.signatureImage,
                texts: [
                    {
                        lines: ["JOHN", "DOE"],
                    },
                    {
                        lines: [
                            "Digitally signed by",
                            "JOHN DOE",
                            "Date: 2023.11.03",
                            "20:28:46 +02'00'",
                        ],
                    },
                ],
            },
        };
        settings = {
            signatureLength: 4000 - 6,
            rangePlaceHolder: 9999999,
            signatureComputer: {
                certificate: _assets_common_1.commonAssets.p12Certificate,
                password: "password",
            },
        };
        pdfSigner = new pdf_digital_signer_1.PdfDigitalSigner(settings);
    });
    it("signs field", function () {
        return __awaiter(this, void 0, void 0, function* () {
            fieldInfo.fieldName = "Signature28";
            const signed = yield pdfSigner.signFieldAsync(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.fieldPdf, fieldInfo);
            yield _helpers_1.generateAsset.generateBinaryAsync(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.paths.fieldSignedPdf, signed);
            (0, chai_2.expect)(signed).to.be.deep.equal(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.fieldSignedPdf);
            const fields = yield pdfSigner.getFieldsAsync(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.fieldPdf);
            (0, chai_2.expect)(fields).to.be.deep.equal([{ name: "Signature28", pageNumber: 9 }]);
        });
    });
    it("check signatures", function () {
        return __awaiter(this, void 0, void 0, function* () {
            const checkResult = yield pdfSigner.verifySignaturesAsync(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.verifySignaturesPdf);
            yield _helpers_1.generateAsset.generateJsonAsync(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.paths.checkResult, checkResult);
            (0, chai_2.expect)(checkResult).to.be.deep.equal(assets_pdf_digital_signer_regression_1.pdfDigitalSignerAssetsRegression.checkResult);
        });
    });
});
