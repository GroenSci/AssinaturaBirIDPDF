"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SignatureEmbeder_pdf, _SignatureEmbeder_signRanges;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureEmbeder = void 0;
const pdf_document_digital_signer_1 = require("./pdf-document-digital-signer");
const errors_1 = require("../errors");
class SignatureEmbeder {
    static fromPdfAsync(pdf) {
        return __awaiter(this, void 0, void 0, function* () {
            const pdfDocSigner = yield pdf_document_digital_signer_1.PdfDocumentDigitalSigner.fromPdfAsync(pdf);
            const signRanges = pdfDocSigner.getPlaceholderRanges();
            return new SignatureEmbeder(signRanges, pdf);
        });
    }
    constructor(signRanges, pdf) {
        _SignatureEmbeder_pdf.set(this, void 0);
        _SignatureEmbeder_signRanges.set(this, void 0);
        __classPrivateFieldSet(this, _SignatureEmbeder_pdf, pdf, "f");
        __classPrivateFieldSet(this, _SignatureEmbeder_signRanges, signRanges, "f");
    }
    getSignBuffer() {
        return Buffer.concat([
            __classPrivateFieldGet(this, _SignatureEmbeder_pdf, "f").subarray(__classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.start, __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.start + __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.length),
            __classPrivateFieldGet(this, _SignatureEmbeder_pdf, "f").subarray(__classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").after.start, __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").after.start + __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").after.length)
        ]);
    }
    embedSignature(signature) {
        const hexSignature = signature.toString('hex').toUpperCase();
        return this.embedHexSignature(hexSignature);
    }
    embedHexSignature(hexSignature) {
        const signatureLen = __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").signature.length - 2;
        if (signatureLen < hexSignature.length) {
            throw new errors_1.TooSmallPlaceholderError();
        }
        const diff = signatureLen - hexSignature.length;
        const fullSignature = Buffer.concat([Buffer.from(hexSignature), Buffer.from('0'.repeat(diff))]);
        return Buffer.concat([
            __classPrivateFieldGet(this, _SignatureEmbeder_pdf, "f").subarray(__classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.start, __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.start + __classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").before.length + 1),
            fullSignature,
            __classPrivateFieldGet(this, _SignatureEmbeder_pdf, "f").subarray(__classPrivateFieldGet(this, _SignatureEmbeder_signRanges, "f").after.start - 1)
        ]);
    }
}
exports.SignatureEmbeder = SignatureEmbeder;
_SignatureEmbeder_pdf = new WeakMap(), _SignatureEmbeder_signRanges = new WeakMap();
