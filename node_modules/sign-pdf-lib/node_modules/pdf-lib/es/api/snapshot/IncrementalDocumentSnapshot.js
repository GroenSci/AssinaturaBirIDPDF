import { PDFRef } from "../../core";
var IncrementalDocumentSnapshot = /** @class */ (function () {
    function IncrementalDocumentSnapshot(lastObjectNumber, indirectObjects, pdfSize, prevStartXRef, context) {
        this.lastObjectNumber = lastObjectNumber;
        this.changedObjects = indirectObjects;
        this.pdfSize = pdfSize;
        this.prevStartXRef = prevStartXRef;
        this.context = context;
    }
    IncrementalDocumentSnapshot.prototype.shouldSave = function (objectNumber) {
        if (objectNumber > this.lastObjectNumber) {
            return true;
        }
        if (this.changedObjects.includes(objectNumber)) {
            return true;
        }
        return false;
    };
    IncrementalDocumentSnapshot.prototype.markRefForSave = function (ref) {
        this.markRefsForSave([ref]);
    };
    IncrementalDocumentSnapshot.prototype.markRefsForSave = function (refs) {
        var _this = this;
        refs.forEach(function (ref) { return _this.changedObjects.push(ref.objectNumber); });
    };
    IncrementalDocumentSnapshot.prototype.markObjForSave = function (obj) {
        this.markObjsForSave([obj]);
    };
    IncrementalDocumentSnapshot.prototype.markObjsForSave = function (objs) {
        var _this = this;
        objs.forEach(function (obj) {
            var ref = obj instanceof PDFRef ? obj : _this.context.getObjectRef(obj);
            _this.markRefForSave(ref);
        });
    };
    return IncrementalDocumentSnapshot;
}());
export { IncrementalDocumentSnapshot };
//# sourceMappingURL=IncrementalDocumentSnapshot.js.map